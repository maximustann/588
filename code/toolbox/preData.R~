#source("DataExtraction.R")
library(Matrix)
predata <- function(noService=3, noCandLoc=3, noUserCen=3){
	set.seed(1)
	#-------------------Set up Problem Start----------------------------
	if(problem == 1){
		noService <- 20
		noCandLoc <- 5
		noUserCen <- 10
		limitation <- noService * noCandLoc * 100
	} else if(problem == 2){
		noService <- 20
		noCandLoc <- 10
		noUserCen <- 10
		limitation <- noService * noCandLoc * 100
	} else if(problem == 3){
		noService <- 50
		noCandLoc <- 15
		noUserCen <- 20
		limitation <- noService * noCandLoc * 100
	} else if(problem == 4){
		noService <- 50
		noCandLoc <- 15
		noUserCen <- 40
		limitation <- noService * noCandLoc * 100
	} else if(problem == 5){
		noService <- 50
		noCandLoc <- 25
		noUserCen <- 20
		limitation <- noService * noCandLoc * 100
	} else if(problem == 6){
		noService <- 50
		noCandLoc <- 25
		noUserCen <- 40
		limitation <- noService * noCandLoc * 100
	}else if(problem == 7){
		noService <- 100
		noCandLoc <- 15
		noUserCen <- 20
		limitation <- noService * noCandLoc * 100
	} else if(problem == 8){
		noService <- 100
		noCandLoc <- 15
		noUserCen <- 40
		limitation <- noService * noCandLoc * 100
	} else if(problem == 9){
		noService <- 100
		noCandLoc <- 25
		noUserCen <- 20
		limitation <- noService * noCandLoc * 100
	} else if(problem == 10){
		noService <- 100
		noCandLoc <- 25
		noUserCen <- 40
		limitation <- noService * noCandLoc * 100
	} else if(problem == 11){
		noService <- 200
		noCandLoc <- 25
		noUserCen <- 40
		limitation <- noService * noCandLoc * 100
	} else if(problem == 12){
		noService <- 200
		noCandLoc <- 25
		noUserCen <- 80
		limitation <- noService * noCandLoc * 100
	} else if(problem == 13){
		noService <- 200
		noCandLoc <- 40
		noUserCen <- 40
		limitation <- noService * noCandLoc * 100
	} else if(problem == 14){
		noService <- 200
		noCandLoc <- 40
		noUserCen <- 80
		limitation <- noService * noCandLoc * 100
	}

	#-------------------Set up Problem End----------------------------
	filename <- paste('../dataset/', noCandLoc, '_', noUserCen, '.csv', sep='')
	latency_matrix <<- read.table(filename, sep=',', header = F)
	latency_matrix <<- as.matrix(latency_matrix, nrow = nrow(latency_matrix))
	#generate a matrix which column represent the candidate locations, and row represent the services
	#I assume in one location, the price for each service is identical, I guess that's a fair assumption
	#	[,1] [,2] [,3] [,4] [,5]
	#[1,]   62  119   94  120  108
	#[2,]   62  119   94  120  108
	#[3,]   62  119   94  120  108
	cost_matrix <<- matrix(
						   rep(floor(rnorm(noCandLoc, 100, 20)), noService),
						   nrow = noService,
						   byrow = T)



	frequency_matrix <<- matrix(
								data = floor(runif(noService * noUserCen, 1, 120)),
								nrow = noUserCen)
}

